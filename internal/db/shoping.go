// Package db provides functionality for interacting with the PostgreSQL database.
package db

import (
	"context"

	"merchshop/internal/models"
)

// ðŸ”˜ðŸŸ¢ðŸ”´
//
// ðŸ”˜ GetUserByUsername(ctx context.Context, username string) (*models.User, error)
// ðŸ”˜ SaveUser(ctx context.Context, user *models.User) error
//
// ðŸ”˜ GetCoinsByUserID(ctx context.Context, userID int) (int, error)
// ðŸ”˜ GetInventoryByUserID(ctx context.Context, userID int) (*[]models.Merch, error)
// ðŸ”˜ GetCoinHistoryByUserID(ctx context.Context, userID int) (*models.CoinHistory, error)
//
// ðŸ”˜ GetIdByUsername(ctx context.Context, username string) (int, error)
// ðŸ”˜ TransferCoins(ctx context.Context, fromUserID, toUserID, coins int) error
//
// ðŸ”˜ GetItemBySlug(ctx context.Context, slug string) (*models.Item, error)
// ðŸ”˜ MakePurchaseByUserID(ctx context.Context, userID int, item *models.Item) error

func (s *Storage) GetIdByUsername(ctx context.Context, username string) (int, error) {
	panic("implement me")
}

func (s *Storage) GetUserByUsername(ctx context.Context, username string) (*models.User, error) {
	panic("implement me")
}

func (s *Storage) GetCoinsByUserID(ctx context.Context, userID int) (int, error) {
	panic("implement me")
}

func (s *Storage) GetInventoryByUserID(ctx context.Context, userID int) (*[]models.Merch, error) {
	panic("implement me")
}

func (s *Storage) GetCoinHistoryByUserID(ctx context.Context, userID int) (*models.CoinHistory, error) {
	panic("implement me")
}

func (s *Storage) SaveUser(ctx context.Context, user *models.User) error {
	panic("implement me")
}

func (s *Storage) TransferCoins(ctx context.Context, fromUserID, toUserID, coins int) error {
	panic("implement me")
}

func (s *Storage) MakePurchaseByUserID(ctx context.Context, userID int, item *models.Item) error {
	panic("implement me")
}

func (s *Storage) GetItemBySlug(ctx context.Context, slug string) (*models.Item, error) {
	panic("implement me")
}
